# Docker Compose file for Vapor
#
# Install Docker on your system to run and test
# your Vapor app in a production-like environment.
#
# Note: This file is intended for testing and does not
# implement best practices for a production deployment.
#
# Learn more: https://docs.docker.com/compose/reference/
#
#   Build images: docker-compose build
#      Start app: docker-compose up app
#       Stop all: docker-compose down
#
version: '3.7'

volumes:
  db_data:

x-shared_environment: &shared_environment
  LOG_LEVEL: ${LOG_LEVEL:-debug}
  DB_HOST: db
  DB_NAME: myproject2
  DB_USERNAME: myproject2
  DB_PASSWORD: password

services:
  app:
    image: myproject2:latest
    build:
      context: .
    environment:
      <<: *shared_environment
    depends_on:
      - db
    ports:
      - '8080:8080'
      - '8081:8081'
# #    user: '0' # uncomment to run as root for testing purposes even though Dockerfile defines 'vapor' user.
#     command: ["serve", "--env", "production", "--hostname", "0.0.0.0", "--port", "8080"]

  db:
    image: postgres:12.2-alpine
    volumes:
      - db_data:/var/lib/postgresql/data/pgdata
    environment:
      PGDATA: /var/lib/postgresql/data/pgdata
      POSTGRES_USER: myproject2
      POSTGRES_PASSWORD: password
      POSTGRES_DB: myproject2
    expose:
      - "5432"
    # ports:
    #   - '5432:5432'